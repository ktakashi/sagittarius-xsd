<?xml verion="1.0" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:sch="http://www.ascc.net/xml/schematron">

  <xsd:annotation>
    <xsd:documentation xml:lang="en">
   Purchase order schema for Example.com.
   Copyright 2000 Example.com. All rights reserved.

   This example is "reinforced" with additional W3C schema rules and the addition
   of embedded Schematron elements
   (see http://www.ascc.net/xml/resource/schematron/schematron.html).
    </xsd:documentation>
    <xsd:appinfo>
      <sch:title>Schematron Validation for an Interface XML Document</sch:title>
    </xsd:appinfo>
  </xsd:annotation>

  <xsd:element name="purchaseOrder" type="PurchaseOrderType">
    <xsd:annotation>
      <xsd:appinfo>
        <sch:pattern name="Root Element">
          <sch:rule context="/*">
            <sch:assert test="name(.) = 'purchaseOrder'">Root element should be a purchaseOrder</sch:assert>
          </sch:rule>
        </sch:pattern>
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="comment" type="xsd:string"/>

  <xsd:complexType name="PurchaseOrderType">
    <xsd:sequence>
      <xsd:element name="shipTo" type="USAddress"/>
      <xsd:element name="billTo" type="USAddress"/>
      <xsd:element ref="comment" minOccurs="0"/>

      <xsd:element name="items"  type="Items">
        <xsd:unique name="partNumbers">
          <xsd:selector xpath="item"/>
          <xsd:field xpath="@partNum"/>
        </xsd:unique>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="orderDate" type="xsd:date"/>
  </xsd:complexType>

  <xsd:complexType name="USAddress">
    <xsd:sequence>
      <xsd:element name="name"   type="xsd:string">
        <xsd:annotation>
          <xsd:appinfo>
            <sch:pattern name="Name">
              <sch:rule context="/purchaseOrder/shipTo/name">
                <sch:assert test="string-length() > 0">shipTo name cannot be blank</sch:assert>
              </sch:rule>
            </sch:pattern>
          </xsd:appinfo>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="street" type="xsd:string">
        <xsd:annotation>
          <xsd:appinfo>
            <sch:pattern name="Street">
              <sch:rule context="/purchaseOrder/shipTo/street">
                <sch:assert test="string-length() > 0">shipTo street cannot be blank</sch:assert>
              </sch:rule>
            </sch:pattern>
          </xsd:appinfo>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="city"   type="xsd:string">
        <xsd:annotation>
          <xsd:appinfo>
            <sch:pattern name="City">
              <sch:rule context="/purchaseOrder/shipTo/city">
                <sch:assert test="string-length() > 0">shipTo city cannot be blank</sch:assert>
              </sch:rule>
            </sch:pattern>
          </xsd:appinfo>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="state"  type="StateCode"/>
      <xsd:element name="zip"    type="ZIP"/>
    </xsd:sequence>
    <xsd:attribute name="country" type="xsd:NMTOKEN"
       fixed="US"/>
  </xsd:complexType>

  <xsd:complexType name="Items">
    <xsd:sequence>
      <xsd:element name="item" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:appinfo>
            <sch:pattern name="OrderDate">
              <sch:rule context="/purchaseOrder/items/item">
                <sch:report test="
                  ((number(substring-before(/purchaseOrder/@orderDate, '-'))*365)+(number(substring-before(substring-after(/purchaseOrder/@orderDate, '-'), '-'))*31)+(number(substring-after(substring-after(/purchaseOrder/@orderDate, '-'), '-')))) &gt;
                  (number(substring-before(shipDate, '-'))*365+(number(substring-before(substring-after(shipDate, '-'), '-'))*31)+(number(substring-after(substring-after(shipDate, '-'), '-'))))">
                  orderDate <value-of select="/purchaseOrder/@orderDate"/> is after a shipDate <value-of select="shipDate"/>
                </sch:report>
              </sch:rule>
            </sch:pattern>
          </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="productName" type="xsd:string"/>
            <xsd:element name="quantity">
              <xsd:simpleType>
                <xsd:restriction base="xsd:positiveInteger">
                  <xsd:maxExclusive value="100"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="USPrice">
              <xsd:simpleType>
                <xsd:restriction base="xsd:decimal">
                  <xsd:minInclusive value="0"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element ref="comment"   minOccurs="0"/>
            <xsd:element name="shipDate" type="xsd:date" minOccurs="0"/>
          </xsd:sequence>
          <xsd:attribute name="partNum" type="SKU" use="required"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- Stock Keeping Unit, a code for identifying products -->
  <xsd:simpleType name="SKU">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{3}-[A-Z]{2}"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="ZIP">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{5}"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="StateCode">
    <xsd:restriction base="xsd:string">
      <!-- Retrieved State codes from: http://www.usps.com/ncsc/lookups/usps_abbreviations.html -->
      <xsd:enumeration value="AL"/>
      <xsd:enumeration value="AK"/>
      <xsd:enumeration value="AS"/>
      <xsd:enumeration value="AZ"/>
      <xsd:enumeration value="AR"/>
      <xsd:enumeration value="CA"/>
      <xsd:enumeration value="CO"/>
      <xsd:enumeration value="CT"/>
      <xsd:enumeration value="DE"/>
      <xsd:enumeration value="DC"/>
      <xsd:enumeration value="FM"/>
      <xsd:enumeration value="FL"/>
      <xsd:enumeration value="GA"/>
      <xsd:enumeration value="GU"/>
      <xsd:enumeration value="HI"/>
      <xsd:enumeration value="ID"/>
      <xsd:enumeration value="IL"/>
      <xsd:enumeration value="IN"/>
      <xsd:enumeration value="IA"/>
      <xsd:enumeration value="KS"/>
      <xsd:enumeration value="KY"/>
      <xsd:enumeration value="LA"/>
      <xsd:enumeration value="ME"/>
      <xsd:enumeration value="MH"/>
      <xsd:enumeration value="MD"/>
      <xsd:enumeration value="MA"/>
      <xsd:enumeration value="MI"/>
      <xsd:enumeration value="MN"/>
      <xsd:enumeration value="MS"/>
      <xsd:enumeration value="MO"/>
      <xsd:enumeration value="MT"/>
      <xsd:enumeration value="NE"/>
      <xsd:enumeration value="NV"/>
      <xsd:enumeration value="NH"/>
      <xsd:enumeration value="NJ"/>
      <xsd:enumeration value="NM"/>
      <xsd:enumeration value="NY"/>
      <xsd:enumeration value="NC"/>
      <xsd:enumeration value="ND"/>
      <xsd:enumeration value="MP"/>
      <xsd:enumeration value="OH"/>
      <xsd:enumeration value="OK"/>
      <xsd:enumeration value="OR"/>
      <xsd:enumeration value="PW"/>
      <xsd:enumeration value="PA"/>
      <xsd:enumeration value="PR"/>
      <xsd:enumeration value="RI"/>
      <xsd:enumeration value="SC"/>
      <xsd:enumeration value="SD"/>
      <xsd:enumeration value="TN"/>
      <xsd:enumeration value="TX"/>
      <xsd:enumeration value="UT"/>
      <xsd:enumeration value="VT"/>
      <xsd:enumeration value="VI"/>
      <xsd:enumeration value="VA"/>
      <xsd:enumeration value="WA"/>
      <xsd:enumeration value="WV"/>
      <xsd:enumeration value="WI"/>
      <xsd:enumeration value="WY"/>
      <xsd:enumeration value="AA"/>
      <xsd:enumeration value="AE"/>
      <xsd:enumeration value="AP"/>
    </xsd:restriction>
  </xsd:simpleType>


</xsd:schema>

